<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:HNPStyles"
                    xmlns:inter="clr-namespace:HNPStyles.Internal">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary Source="pack://application:,,,/HNPStyles;component/Resources.xaml"/>
    </ResourceDictionary.MergedDictionaries>

    <Style x:Key="Base" TargetType="{x:Type inter:Base}">
        <Setter Property="PrimaryColor" Value="{Binding PrimaryColor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:Panel}, Mode=OneWay}"/>
        
        <Setter Property="OutlineBrushLightParameter" Value="{Binding OutlineBrushLightParameter, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:Panel}, Mode=OneWay}"/>
        <Setter Property="OutlineBrushDarkParameter" Value="{Binding OutlineBrushDarkParameter, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:Panel}, Mode=OneWay}"/>
        <Setter Property="OutlineThickness" Value="{Binding OutlineThickness, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:Panel}, Mode=OneWay}"/>

        <Setter Property="InnerBrushLightParameter" Value="{Binding InnerBrushLightParameter, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:Panel}, Mode=OneWay}"/>
        <Setter Property="InnerBrushDarkParameter" Value="{Binding InnerBrushDarkParameter, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:Panel}, Mode=OneWay}"/>
        
        <Setter Property="LightAngle" Value="{Binding LightAngle, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:Panel}, Mode=OneWay}"/>
        <Setter Property="InnerShape" Value="{Binding InnerShape, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:Panel}, Mode=OneWay}"/>
        
        <Setter Property="IntensityRate" Value="{Binding IntensityRate, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:Panel}, Mode=OneWay}"/>

        <Setter Property="ScaleFactor" Value="{Binding ScaleFactor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:Panel}, Mode=OneWay}"/>
        
        <Setter Property="Distance" Value="{Binding Distance, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:Panel}, Mode=OneWay}"/>
        <Setter Property="DistanceToBlurRadiusFactor" Value="{Binding DistanceToBlurRadiusFactor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:Panel}, Mode=OneWay}"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type inter:Base}">
                    <!--#region == Triggers == -->
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Trigger.EnterActions>
                                <StopStoryboard BeginStoryboardName="HideOutlineStoryboard"/>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="{StaticResource NormalTime}" To="0" Storyboard.TargetProperty="DistanceRate"/>
                                        <DoubleAnimation Duration="{StaticResource NormalTime}" To="1" Storyboard.TargetProperty="OutlineOpacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="{StaticResource NormalTime}" To="1" Storyboard.TargetProperty="DistanceRate"/>
                                        <DoubleAnimation Duration="{StaticResource NormalTime}" To="0" Storyboard.TargetProperty="OutlineOpacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger Property="IsOutlineShown" Value="True">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0" To="1" Storyboard.TargetProperty="OutlineOpacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard Name="HideOutlineStoryboard">
                                    <Storyboard>
                                        <DoubleAnimation Duration="0:0:0" To="0" Storyboard.TargetProperty="OutlineOpacity"/>
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                    <!--#endregion-->
                    <Grid>
                        <Grid.Resources>
                            <BlurEffect x:Key="BlurEffect" Radius="{Binding BlurRadius, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}"/>
                            <TranslateTransform x:Key="Transform1"
                                                X="{Binding DX1, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}"
                                                Y="{Binding DY1, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}"/>
                            <TranslateTransform x:Key="Transform2"
                                                X="{Binding DX2, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}"
                                                Y="{Binding DY2, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}"/>
                        </Grid.Resources>
                        <Grid Visibility="{TemplateBinding OuterShadowVisibility}" Effect="{StaticResource BlurEffect}">
                            <Path Data="{Binding Geometry, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}"
                                  Fill="{Binding ShadowBrush1, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}"
                                  RenderTransform="{StaticResource Transform1}"/>
                            <Path Data="{Binding Geometry, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}"
                                  Fill="{Binding ShadowBrush2, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}"
                                  RenderTransform="{StaticResource Transform2}"/>
                        </Grid>
                        <Path Data="{Binding Geometry, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}"
                              Stroke="{Binding OutlineBrush, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}"
                              StrokeThickness="{Binding OutlineThickness, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}"
                              Fill="{Binding InnerBrush, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}"/>
                        <ContentControl Content="{TemplateBinding Content}" RenderTransformOrigin="0.5,0.5"
                                        Clip="{Binding Geometry, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}">
                            <ContentControl.RenderTransform>
                                <ScaleTransform ScaleX="{Binding Scale, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}"
                                                ScaleY="{Binding Scale, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}"/>
                            </ContentControl.RenderTransform>
                        </ContentControl>
                        <Grid Visibility="{TemplateBinding InnerShadowVisibility}" Effect="{StaticResource BlurEffect}" IsHitTestVisible="False"
                              Clip="{Binding Geometry, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}">
                            <Rectangle Fill="{Binding ShadowBrush1, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}">
                                <Rectangle.Clip>
                                    <CombinedGeometry GeometryCombineMode="Exclude"
                                                      Geometry1="{Binding Geometry, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}"
                                                      Geometry2="{Binding Geometry2, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}"/>
                                </Rectangle.Clip>
                            </Rectangle>
                            <Rectangle Fill="{Binding ShadowBrush2, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}">
                                <Rectangle.Clip>
                                    <CombinedGeometry GeometryCombineMode="Exclude"
                                                      Geometry1="{Binding Geometry, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}"
                                                      Geometry2="{Binding Geometry1, RelativeSource={RelativeSource Mode=TemplatedParent}, Mode=OneWay}"/>
                                </Rectangle.Clip>
                            </Rectangle>
                        </Grid>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type inter:Base}" BasedOn="{StaticResource Base}"/>

    <Style TargetType="{x:Type local:EllipseBase}" BasedOn="{StaticResource Base}"/>

    <Style TargetType="{x:Type local:RectangleBase}" BasedOn="{StaticResource Base}">
        <Setter Property="CornerRadius" Value="{Binding CornerRadius, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:Panel}, Mode=OneWay}"/>
    </Style>

    <Style TargetType="{x:Type local:RoundBase}" BasedOn="{StaticResource Base}"/>

    <local:ColorToSolidColorBrushConverter x:Key="ColorToSolidColorBrushConverter"/>
    <Style TargetType="{x:Type local:TextBase}" BasedOn="{StaticResource Base}">
        <Setter Property="Foreground" Value="{Binding PrimaryColor, RelativeSource={RelativeSource Mode=Self}, Mode=OneWay, Converter={StaticResource ColorToSolidColorBrushConverter}}"/>
        <Setter Property="Distance" Value="{Binding TextDistance, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:Panel}, Mode=OneWay}"/>
        <Setter Property="DistanceToBlurRadiusFactor" Value="{Binding TextDistanceToBlurRadiusFactor, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:Panel}, Mode=OneWay}"/>
    </Style>

    <Style TargetType="{x:Type local:ContrastiveTextBlock}">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Foreground" Value="{Binding Foreground, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=local:Panel}, Mode=OneWay}"/>
    </Style>

</ResourceDictionary>